package com.nlpp.entity;
// Generated Apr 18, 2012 9:57:40 PM by Hibernate Tools 3.2.1.GA


import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * EventEnrollments generated by hbm2java
 */
@Entity
@Table(name="EventEnrollments"
    ,schema="dbo"
    ,catalog="NLPP"
)
public class EventEnrollments  implements java.io.Serializable {


     private EventEnrollmentsId id;
     private Events events;
     private Users users;
     private PaymentType paymentType;
     private boolean isPaid;
     private Date dateOfEnrollment;
     private Date dateOfPayment;

    public EventEnrollments() {
    }

	
    public EventEnrollments(EventEnrollmentsId id, Events events, Users users, PaymentType paymentType, boolean isPaid, Date dateOfEnrollment) {
        this.id = id;
        this.events = events;
        this.users = users;
        this.paymentType = paymentType;
        this.isPaid = isPaid;
        this.dateOfEnrollment = dateOfEnrollment;
    }
    public EventEnrollments(EventEnrollmentsId id, Events events, Users users, PaymentType paymentType, boolean isPaid, Date dateOfEnrollment, Date dateOfPayment) {
       this.id = id;
       this.events = events;
       this.users = users;
       this.paymentType = paymentType;
       this.isPaid = isPaid;
       this.dateOfEnrollment = dateOfEnrollment;
       this.dateOfPayment = dateOfPayment;
    }
   
     @EmbeddedId
    
    @AttributeOverrides( {
        @AttributeOverride(name="eventId", column=@Column(name="EventID", nullable=false) ), 
        @AttributeOverride(name="username", column=@Column(name="Username", nullable=false, length=30) ) } )
    public EventEnrollmentsId getId() {
        return this.id;
    }
    
    public void setId(EventEnrollmentsId id) {
        this.id = id;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="EventID", nullable=false, insertable=false, updatable=false)
    public Events getEvents() {
        return this.events;
    }
    
    public void setEvents(Events events) {
        this.events = events;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Username", nullable=false, insertable=false, updatable=false)
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PaymentType", nullable=false)
    public PaymentType getPaymentType() {
        return this.paymentType;
    }
    
    public void setPaymentType(PaymentType paymentType) {
        this.paymentType = paymentType;
    }
    
    @Column(name="IsPaid", nullable=false)
    public boolean isIsPaid() {
        return this.isPaid;
    }
    
    public void setIsPaid(boolean isPaid) {
        this.isPaid = isPaid;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="DateOfEnrollment", nullable=false, length=10)
    public Date getDateOfEnrollment() {
        return this.dateOfEnrollment;
    }
    
    public void setDateOfEnrollment(Date dateOfEnrollment) {
        this.dateOfEnrollment = dateOfEnrollment;
    }
    @Temporal(TemporalType.DATE)
    @Column(name="DateOfPayment", length=10)
    public Date getDateOfPayment() {
        return this.dateOfPayment;
    }
    
    public void setDateOfPayment(Date dateOfPayment) {
        this.dateOfPayment = dateOfPayment;
    }




}


